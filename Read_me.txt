시뮬레이션 실험 보고서
index.html : json 결과를 보기위한 임시적인 html
-------------------------------------------------
ver_1 : 속도 변환결과를 보기위해 json 확인용  임시 html
--------------------------------------------------------
sim : 시뮬레이션을 만들기 위한 기초 설정
----------------------------------------------
sim.1 각 AGV의 현재 좌표를 10ms단위로 받는데 성공함. / AGV가 같은 지점에서 
sim.2 AGV가 각각 개별된 좌표에서 시작하는 것 성공함.
sim.3 AGV가 적재와 하역에서 일정시간(10s)동안 멈추어서 작업하는데 성공함.
----------------------------------------------
ver_1 : AGV가 A*방식으로 경로를 설계함.
-----------------------------------------------
1.1 각 AGV의 경로를 담는데 성공함. But 교착(deadlock)이 발생함.
1.2 각 AGV의 경로에서 교착 지점을 찾는데 성공함.
1.3 각 AGV의 교착지점에서 회피경로 설계 적용함.
------------------------------------------------------
ver_2 : AGV 경로 설계방식을 A*에서 BFS방식을 추가로 도입함.
------------------------------------------------------
2.1 기존의 AGV가 가지고 있는 문제인 전체 경로 설계를 담을 수 없는 점을 고치기 위해 BFS 도입함.
2.2 전체 경로를 인식하고 자연스럽게 다음 경로를 가는데 성공함./ 같은 시간에 같은 경로를 가는경우 겹침 현상이 나타남.
2.3 겹침에 대해서 서로 인식하기 위해 next_path변수를 도입함.
2.4 서로의 다음 경로들을 확인해서 겹치지 않는 경우에 이동 / 겹치는 경우에 대해서는 추가 방법 필요
2.5 MVP를 위한 경로 겸침을 피하기 위해 후진 기능을 추가함 / 0.1초 단위로 진행되는 만큼 특정상황에 겹침이 계속됨.
2.6 AGV속도를 uniform으로 변경하면서 시뮬레이션 복잡도가 크게 상승함.
2.7 결과 보고서 부분에서 반복 실험을 적용함.
-----------------------------------------------------------
ver_3 : 겹침 문제 해결을 위해 새로운 경로 설계 방법론 도입 필요함.
-----------------------------------------------------------
3.1 새로운 경로 설계를 위한 논문 찾아봄(구역 지정 이론, 상호 회피 이론)
3.2 구역 지정 이론을 경로 설계에 적용함. / AGV가 특정 지역으로만 가는 문제가 발생함.
3.3 상호 회피 이론을 적용함. / 조금만 가능성이 존재해도 경로를 회피하는 문제 발생.
------------------------------------------------------------
road_test코드 제작
------------------------------------------------------------
r.1 : 알고리즘을 위해 복잡도를 낮추고 교착과 겹침을 감지할 수 있는 코드 제작
r.2 : 교착과 겹침에 대한 횟수를 정확히 파악할 수 있도록 코드 수정
r.3 : 속도의 변동성에 따라 발생하는 문제가 있을것이라 판단하여 속도의 변동성을 추가함.
r.4 : 다익스트라 알고리즘 적용해봄 / 여전히 교착이 존재한다는 것을 알 수 있었음. 추가적인 판단 필요




